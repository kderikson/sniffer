#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.6.8 on Sun Apr 26 16:43:14 2015
#
import socket
from struct import *
import datetime
import pcapy
import sys
import wx
import time
import thread
# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    loop = True;

    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        self.list_ctrl_1 = wx.ListCtrl(self, wx.ID_ANY, style=wx.LC_REPORT | wx.LC_HRULES | wx.SUNKEN_BORDER)
        self.list_ctrl_1.InsertColumn(0,'Dest. MAC', width=100)
        self.list_ctrl_1.InsertColumn(1,'Source. MAC', width=100)
        self.list_ctrl_1.InsertColumn(2,'Protocol', width=100)
        self.list_ctrl_1.InsertColumn(3,'Version', width=100)
        self.list_ctrl_1.InsertColumn(4,'IP Header Length', width=150)
        self.list_ctrl_1.InsertColumn(5,'TTL', width=100)
        self.list_ctrl_1.InsertColumn(6,'Source Address', width=100)
        self.list_ctrl_1.InsertColumn(7,'Dest. Address', width=100)
        self.list_ctrl_1.InsertColumn(8,'Source Port', width=100)
        self.list_ctrl_1.InsertColumn(9,'Dest. Port', width=100)
        self.list_ctrl_1.InsertColumn(10,'Length', width=100)
        self.list_ctrl_1.InsertColumn(11,'Checksum', width=100)

        
        self.btnStart = wx.Button(self, wx.ID_ANY, _("Start"))
        self.btnStop = wx.Button(self, wx.ID_ANY, _("Stop"))
        self.btnPrint = wx.Button(self, wx.ID_ANY, _("Print"))
        self.btnExit = wx.Button(self, wx.ID_ANY, _("Exit"))

        self.Bind(wx.EVT_BUTTON, self.Start, self.btnStart)
        self.Bind(wx.EVT_BUTTON, self.Stop, self.btnStop)
        self.Bind(wx.EVT_BUTTON, self.Print, self.btnPrint)
        self.Bind(wx.EVT_BUTTON, self.Exit, self.btnExit)

        index = self.list_ctrl_1.InsertStringItem(0, "column 1")
        self.list_ctrl_1.SetStringItem(index, 1, "column 2")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle(_("frame_1"))
        self.SetSize((700, 487))
        self.list_ctrl_1.SetMinSize((700, 400))

        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.FlexGridSizer(2, 1, 0, 0)
        sizer_2 = wx.GridSizer(1, 4, 5, 0)
        sizer_1.Add(self.list_ctrl_1, 1, wx.EXPAND, 0)
        sizer_2.Add(self.btnStart, 0, 0, 0)
        sizer_2.Add(self.btnStop, 0, 0, 0)
        sizer_2.Add(self.btnPrint, 0, 0, 0)
        sizer_2.Add(self.btnExit, 0, 0, 0)
        sizer_1.Add(sizer_2, 1, wx.ALIGN_CENTER_HORIZONTAL, 2)
        self.SetSizer(sizer_1)
        sizer_1.AddGrowableRow(0)
        sizer_1.AddGrowableCol(0)
        self.Layout()
        # end wxGlade

    def Start(self, event):
        print "Hello there."
        cap = pcapy.open_live("eth0" , 65536 , 1 , 1000000)

        thread.start_new_thread(self.get_data, (cap, ))

    def get_data(self, cap):
        while(self.loop) :
            print "Looping..."
            # (header, packet) = cap.next()
            # #print ('%s: captured %d bytes, truncated to %d bytes' %(datetime.datetime.now(), header.getlen(), header.getcaplen()))
            # parse_packet(packet)

    def parse_info(self, event):
        event.skip()

    def Stop(self, event):
        print "Stopping"
        self.loop = False

    def Print(self, event):
        print "Printing"

    def Exit(self, event):
        print "Exiting"

# end of class MyFrame
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MyFrame(None, wx.ID_ANY, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()